/********************************************************************************
## 문제
인수로 2, 3, 5, 7만을 가지는 숫자들을 '작은 소수들의 곱셈'이라고 정의하자. 이런 '작은 소수들의 곱셈'에는 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21, 24, 25, 27 등이 있다.
N번째 '작은 소수들의 곱셈'을 알아내는 프로그램을 작성하자.

## 입력
첫 번째 줄에 테스트 케이스의 수 T가 주어진다. (1 ≤ T ≤ 100)
각 테스트 케이스에 대해 첫 번째 줄에 N이 주어진다. (1 ≤ N ≤ 5842)

## 출력
각 테스트 케이스에 대해 첫 번째 줄에 N번째 '작은 소수들의 곱셈'을 출력한다.

## 입력 예제

5
1
11
100
1000
5842

## 출력 예제

1
12
450
385875
2000000000
********************************************************************************/



#include <stdio.h>
#include <algorithm>
using namespace std;
int T, N;
long long r[6000];
long long p[4] = {2, 3, 5, 7}; 
int idx[4];
long long nxt[4] = {2, 3, 5, 7};
int main(){
    r[0] = 1;
    for (int i = 1; i <= 5842; i++){
        long long mini = *min_element(nxt, nxt + 4);
        r[i] = mini;
        for (int j = 0; j < 4; j++){
            if (nxt[j] == mini)
                nxt[j] = (long long)p[j] * r[++idx[j]];
        }
    }
    scanf("%d", &T);

    for(int i=0; i<T; ++i){
        scanf("%d", &N);
        printf("%lld\n", r[N-1]);
    }
    return 0;
}
