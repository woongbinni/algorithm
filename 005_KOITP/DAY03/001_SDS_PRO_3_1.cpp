/********************************************************************************
## 문제
호석이의 생일을 맞아, 호석이를 포함하여 총 N명의 사람들이 중국집에 가기로 하였다. 이 중국집에는 큰 원탁이 있는데, 사람들은 원탁을 돌려 자신이 원하는 음식을 자신의 앞에 둔 다음 그릇에 덜어 먹게 된다.
이 중국집의 가장 특별한 요리는 탕수육인데, 이 탕수육은 특별한 요리이기 때문에 원탁 위에 단 하나만 올려준다. 이 특별한 요리를 먹기 위해 사람들이 원탁을 계속 돌리면, 다툼이 생길 수 있기 때문에 호석이는 음식을 먹는 규칙을 정하기로 하였다. 이 규칙은 다음과 같다.
처음 요리가 나왔을 때, 탕수육은 생일자인 호석이 앞에 놓여 있다.
탕수육을 먹고 나면, 원탁에서 일어난다.
1분마다 원탁을 시계 방향으로 회전하는데, 탕수육을 먹지 않은 K번째 사람 앞에 탕수육을 두도록 회전한다.
처음 중국집의 원탁에 앉을 때, 호석이가 1번 위치에 앉게 된다. 그리고 1번 위치부터 시계방향으로 2번, 3번, ..., N번으로 번호를 매긴다.
예를 들어 5명의 사람이 있고, K가 3인 경우 다음의 순서로 탕수육을 먹게 된다.
초기에 호석이가 있는 1번 위치의 사람이 탕수육을 먹는다.
2번, 3번, 4번 사람이 모두 탕수육을 먹지 않았으므로 3번째 사람인 4번 사람이 탕수육을 먹는다.
5번 사람이 탕수육을 먹지 않았고, (원탁이므로 다시) 1번 사람은 탕수육을 먹었고, 2번, 3번 사람이 탕수육을 먹지 않았으므로 3번째 사람인 3번 사람이 탕수육을 먹는다.
5번, 2번, 5번 순서로 탕수육을 먹지 않았으므로 5번 사람이 탕수육을 먹는다.
마지막으로 남은 2번 사람이 탕수육을 먹는다.
사람의 수 N과 K가 주어질 때, 탕수육을 먹는 순서를 알아내자.

## 입력
첫 번째 줄에 사람의 수 N과 K가 공백으로 분리되어 주어진다. (3 ≤ N ≤ 1000, 1 ≤ K ≤ 1000)

## 출력
탕수육을 먹는 순서를 공백으로 분리하여 출력한다.

## 입력 예제 1

5 3

## 출력 예제 1

1 4 3 5 2

## 입력 예제 2

6 3

## 출력 예제 2

1 4 2 6 3 5

## 힌트 linked list
********************************************************************************/


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <list>
using namespace std;

list<int> people;
int N, K;

void solve() {
	list<int>::iterator it = people.begin();
	while (people.size() > 0) {
		int temp = *it;
		printf("%d ", *it);
		it = people.erase(it);
		if (it == people.end())
			it = people.begin();

		for (int i = 0; i < K - 1; ++i) {
			it++;
			if (it == people.end())
				it = people.begin();
		}
	}
	printf("\n");
	return;
}

int main(void) {
	scanf("%d%d", &N, &K);

	for (int i = 1; i <= N; ++i) {
		people.push_back(i);
	}

	solve();
	people.clear();

	return 0;
}